name: CMakeARM

on:
  on: workflow_dispatch
  pull_request:
  push:
    paths: 
      - '**/Constants.hpp'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04-arm

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        sudo apt-get update
        sudo apt-get install cmake mesa-common-dev libxxf86vm-dev freeglut3-dev libxext-dev libxcursor-dev portaudio19-dev libsndfile1-dev libopenxr-dev
        cd src
        sed -i 's/#add_definitions(-DFOR_DEB)/add_definitions(-DFOR_DEB)/g' CMakeLists.txt
        cat CMakeLists.txt
        cd ../bin
        cmake ../src

    - name: Build
      # Build your program with the given configuration
      run: |
        cd bin
        make
        ./bridgecommand --version
        cd createDeb
        ./buildDeb
      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64
        path: bin/createDeb/bridgecommand.deb
