name: Build_Win64

on: push

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: "src/Visual Studio solution/Bridge Command.sln"

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_ARCHITECTURE: x64

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download netCDF
      run: |
        Invoke-WebRequest -Uri "https://downloads.unidata.ucar.edu/netcdf-c/4.9.3/netCDF4.9.3-NC4-64.exe" -OutFile netCDF4.9.3-NC4-64.exe

    - name: Install netCDF
      run: |
        Start-Process -FilePath .\netCDF4.9.3-NC4-64.exe -ArgumentList "/S" -Wait

    - name: Add netCDF to env
      run: |
        echo "INCLUDE=C:\Program Files\netCDF 4.9.3\include;%INCLUDE%" >> $GITHUB_ENV
        echo "LIB=C:\Program Files\netCDF\lib;%LIB%" >> $GITHUB_ENV

    - name: Download DirectX SDK (June 2010)
      run: |
        Invoke-WebRequest -Uri "https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe" -OutFile DXSDK_Jun10.exe
	
    - name: Install DirectX SDK
      run: |
        Start-Process -FilePath .\DXSDK_Jun10.exe -ArgumentList "/quiet" -NoNewWindow -Wait

    - name: Add DXSDK_DIR to env
      run: echo "DXSDK_DIR=C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\" >> $GITHUB_ENV


    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m:1 /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_ARCHITECTURE}} "${{env.SOLUTION_FILE_PATH}}"

    - name: Build Installer
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: "makensis.exe /DOUTPUTFILE=../installer_autoBuild.exe bin/installNoSource.nsi"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BC_windows
        path: installer_autoBuild.exe
